@using IdentityServer4.SecurityTokenService.Models.Settings
@using Microsoft.AspNetCore.Http.Features
@model IdentityServer4.SecurityTokenService.Models.Settings.SecurityViewModel
@{
    ViewData["Title"] = "Security";
}
<div class="row">
    <div class="col-md-4">
        <ul class="list-group">
            <li class="list-group-item list-group-item-secondary">Personal settings</li>
            <li class="list-group-item list-group-item-action">
                <a asp-controller="Settings" asp-action="Profile">Profile</a>
            </li>
            <li class="list-group-item list-group-item-action">
                <a asp-controller="Settings" asp-action="Account">Account</a>
            </li>
            <li class="list-group-item list-group-item-action active">
                <a class="text-white" asp-controller="Settings" asp-action="Security">Security</a>
            </li>
            <li class="list-group-item list-group-item-action">
                <a asp-controller="Settings" asp-action="Email">Email</a>
            </li>
            <li class="list-group-item list-group-item-action">
                <a asp-controller="Settings" asp-action="ExternalLogins">External Logins</a>
            </li>
            <li class="list-group-item list-group-item-action">
                <a asp-controller="Settings" asp-action="Applications">Applications</a>
            </li>
        </ul>
    </div>
    <div class="col-md-8">
        @(await Html.PartialAsync("ChangePassword", new ChangePasswordViewModel
        {
            HasPassword = Model.HasPassword
        }))
        <h5>Phone</h5>
        <hr/>
        @(await Html.PartialAsync("AddPhoneNumber", new AddPhoneNumberViewModel{ PhoneNumber = Model.PhoneNumber}))
        @{
            var consentFeature = Context.Features.Get<ITrackingConsentFeature>();
            @if (consentFeature?.CanTrack ?? true)
            {
                @if (Model.Is2faEnabled)
                {
                    <h5>Two-factor authentication</h5>
                    <hr/>
                    <div class="row">
                        <div class="col-md-8">
                            @if (Model.RecoveryCodesLeft == 0)
                            {
                                <div class="alert alert-danger">
                                    <strong>You have no recovery codes left.</strong>
                                    <p>You must <a asp-controller="Settings" asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
                                </div>
                            }
                            else if (Model.RecoveryCodesLeft == 1)
                            {
                                <div class="alert alert-danger">
                                    <strong>You have 1 recovery code left.</strong>
                                    <p>You can <a asp-controller="Settings" asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
                                </div>
                            }
                            else if (Model.RecoveryCodesLeft <= 3)
                            {
                                <div class="alert alert-warning">
                                    <strong>You have @Model.RecoveryCodesLeft recovery codes left.</strong>
                                    <p>You should <a asp-controller="Settings" asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
                                </div>
                            }

                            @if (Model.IsMachineRemembered)
                            {
                                <form method="post" style="display: inline-block">
                                    <button type="submit" class="btn btn-primary">Forget this browser</button>
                                </form>
                            }
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-8">
                            <div class="form-group">
                                <a asp-controller="Settings" asp-action="DisableTwoFactorAuthentication" class="btn btn-outline-danger">Disable 2FA</a>
                                <a asp-controller="Settings" asp-action="GenerateRecoveryCodes" class="btn btn-outline-danger">Reset recovery codes</a>
                            </div>
                        </div>
                    </div>
                }

                <h5>Authenticator app</h5>
                <hr/>
                @if (!Model.HasAuthenticator)
                {
                    <a id="enable-authenticator" asp-controller="Settings" asp-action="EnableAuthenticator" class="btn btn-outline-primary">Add authenticator app</a>
                }
                else
                {
                    <form asp-controller="Settings" asp-action="DisableTwoFactorAuthentication" method="post" role="form">
                        @Html.AntiForgeryToken()
                        <a id="enable-authenticator" asp-controller="Settings" asp-action="EnableAuthenticator" class="btn btn-outline-primary">Set up authenticator app</a>
                        <a asp-controller="Settings" asp-action="ResetAuthenticator" class="btn btn-outline-primary">Reset authenticator app</a>
                    </form>
                }
            }
            else
            {
                <div class="alert alert-danger">
                    <strong>Privacy and cookie policy have not been accepted.</strong>
                    <p>You must accept the policy before you can enable two factor authentication.</p>
                </div>
            }
        }
    </div>
</div>

@section Scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}